{"task":"Recursion relation cross-check for closed form","priority":"Medium","depends_on":"C:\\Users\\%USERNAME%\\Code\\asciimath\\su2-3nj-generating-functional\\VnV-TODO.ndson","python_snippet":"import sympy as sp\nfrom project.su2_3nj_closed_form import closed_form_3nj\nfrom project.su2_3nj_generating_functional import recursion_3nj\njs = [1,2,3,4,5,6]\nval_dir = closed_form_3nj(*js)\nval_rec = recursion_3nj(*js)\nassert sp.simplify(val_dir - val_rec) == 0, \"Recursion mismatch\""}
{"task":"Implement and validate true hypergeometric 4F3 closed-form for Wigner 6-j symbol","priority":"Medium","python_snippet":"import sympy as sp\nfrom project.su2_3nj import generate_3nj\nfrom project.su2_3nj_closed_form import closed_form_3nj  # to be replaced with real 4F3 code\n\ntests = [(1,1,1,1,1,1),(2,2,2,2,2,2),(1,2,3,4,5,6)]\nfor js in tests:\n    num = generate_3nj(*js)\n    cf  = closed_form_3nj(*js)\n    assert sp.simplify(num - cf) == 0, f\"Mismatch for {js}: num={num}, cf={cf}\""}
